name: Build

on:
  push:
    branches:
      - feature/camp-unit-test

jobs:
  ui-tests:
    env:
      DB_HOST: localhost
      DB_USERNAME: ${{ secrets.CI_DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
      PIX_API_KEY: 'foo'
      STUB_AWS_ACCESS_KEY_ID: 'dummy'
      STUB_AWS_SECRET_ACCESS_KEY: 'dummy'
      TESTS: ${{ matrix.test-suite }}
      NPM_TOKEN: ${{ secrets.GH_API_ACCESS_TOKEN }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PORT: 5432
          POSTGRES_USER: ${{ secrets.CI_DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        test-suite: [otpcam, otpcam2]
    steps:
      - name: Check out this repository as src
        uses: actions/checkout@v2
        with:
          path: src
      
      - name: Check out OTP API as api-src
        uses: actions/checkout@v2
        with:
          repository: oohmedia/otp-api
          path: api-src
          token: ${{ secrets.GH_ORG_ACCESS_TOKEN }}
      
      - name: Digix
        uses: actions/checkout@v2
        with:
          repository: oohmedia/digix
          ref: master
          path: digix
          token: ${{ secrets.GH_ORG_ACCESS_TOKEN }}
      
      - name: Classix
        uses: actions/checkout@v2
        with:
          repository: oohmedia/classix
          ref: main
          path: classix
          token: ${{ secrets.GH_ORG_ACCESS_TOKEN }}
      
      - name: Otp Infra
        uses: actions/checkout@v2
        with:
          repository: oohmedia/otp-infra
          path: pipelines
          token: ${{ secrets.GH_ORG_ACCESS_TOKEN }}
      
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OTP_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OTP_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: AWS default profile
        run: |
          aws configure set default.region ${{ secrets.OTP_REGION }}
          aws configure set aws_access_key_id ${{ secrets.OTP_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.OTP_SECRET_ACCESS_KEY }}
          aws sts get-caller-identity

      - name: Run elasticmq
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/src/logs
          ls -la ${GITHUB_WORKSPACE}/src/logs
          ls -la ${GITHUB_WORKSPACE}/api-src/elasticmq.conf
          docker run -p 9324:9324 -p 9325:9325 -v ${GITHUB_WORKSPACE}/api-src/elasticmq.conf:/opt/elasticmq.conf roribio16/alpine-sqs > ${GITHUB_WORKSPACE}/src/logs/elastic-mq.log 2>&1 &

      - name: Cypress tests
        run: pipelines/pipeline/shared/ui-test.sh

      - name: Archive test logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ui-test-logs-${{ matrix.test-suite }}
          path: src/logs/*.log
